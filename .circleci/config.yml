version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

      # CircleCI Environment Variables
      #
      #   - COMMIT_DOCS
      #       - Default is "false". When set to "true" docs site will be built and
      #         auto commited to master branch.
      #   - DEPLOY_ARTIFACTS
      #       - Default is "false". When set to "true" the build artifacts will be
      #         deployed to specified repository locations.
      #   - GIT_EMAIL
      #       - Email used for commiting docs updates.
      #   - GIT_USER
      #       - User used for commiting docs updates.
      #   - GPG_KEY
      #       - Key for singing maven artifacts. This needs to be base64 encoded.
      #   - GPG_KEYNAME
      #       - Key id for singing maven artifacts.
      #   - GPG_PASSPHRASE
      #       - Passphrase of GPG key.
      #   - MVN_PASSWORD
      #       - Maven repo password used to deploy artifacts.
      #   - MVN_USERNAME
      #       - Maven repo username used to deploy artifacts.
      #   - RELEASE_LOC
      #       - Repository to deploy release artifacts to.
      #   - SNAPSHOT_LOC
      #       - Repository to deploy snapshot artifacts to.
      #

    steps:
      # Set up NPM/NodeJS for doc building
      - run:
          command: |
            curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
            sudo apt-get install -y nodejs npm
            sudo npm install jquery -g
            sudo npm install node-docson -g

      - checkout

      # Restore/Build the Cache. Note, the compile step is used to populate the
      # .m2 directory for each of the individual Bender modules.
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn dependency:resolve-plugins
      - run: mvn clean compile -Dmaven.main.skip -Dexec.skip
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: cp .circleci/m2.settings.xml ~/.m2/settings.xml

      # Run our tests
      - run: mvn install -DskipTests -Dgpg.skip
      - run: mvn test

      # Build javadocs
      - run: mvn compile javadoc:aggregate
      
      # Copy our test results to a single directory for CircleCI's
      # store_test_results configuration.
      - run:
          command: |
            mkdir -p /tmp/test-results && \
            find . -type f -name 'TEST*.xml' -exec cp {} /tmp/test-results \;
            ls -la /tmp/test-results
      - store_test_results:
          path: /tmp/test-results

      - deploy:
          name: Deploy to Maven Central Repository
          command: |
            DEPLOY_ARTIFACTS=${DEPLOY_ARTIFACTS-false}
            if [[ ("${DEPLOY_ARTIFACTS}" == "true") && ("${CIRCLE_BRANCH}" == "master") ]]; then
              echo "Deploying Snapshot"
              mvn clean deploy -DaltDeploymentRepository=ossrh::default::${SNAPSHOT_LOC} -Dgpg.skip -DskipTests
            else
              echo "Skipping Snapshot Deploy"
            fi
            if echo ${CIRCLE_BRANCH} | grep "^release\/[0-9]\+\.[0-9]\+\.[0-9]\+$"; then
              echo "Deploying Release"
              sudo apt-get install gnupg1
              echo $GPG_KEY | base64 --decode > build.gpg
              gpg1 --import build.gpg
              mvn clean deploy -DaltDeploymentRepository=ossrh::default::${RELEASE_LOC} -DskipTests
            else
              echo "Skipping Release Deploy"
            fi
      - run:
          name: Update docs
          command: |
            COMMIT_DOCS=${COMMIT_DOCS-false}
            java -cp "cli/target/*" com.nextdoor.bender.CreateSchema --out-file docs/schema.json --docson
            export NODE_PATH=/usr/lib/node_modules
            cd docs && node gendocs.js
            if [[ ("${COMMIT_DOCS}" == "true") && (${CIRCLE_BRANCH} == "master") && (`git diff --name-only index.html | grep index.html`)]]; then
              echo "Updating Docs"
              git config --global user.email "${GIT_EMAIL}"
              git config --global user.name "${GIT_USER}"
              git commit -a -m "Auto updating docs"
              git push origin master
            else
              echo "Skipping Docs Update"
            fi
